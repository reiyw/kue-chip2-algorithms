*** KUE-CHIP2 Assembler ver.1.0   by H.Ochi ***

* Multiplication of Floating-point Numbers ((1+1+14)bytes*(1+1+14)bytes=(1+1+14)bytes)
* Programmed by Ryo Takahashi, June 1, 2014

* Storage for Multiplier (Given)
 80 :                   DATA1:  EQU             80H
* Storage for Multiplicand (Given)
 90 :                   DATA2:  EQU             90H
* Storage for Partial Product (Work Area)
 D0 :                   WORK:   EQU             0D0H
* Storage for Loop Counter (Work Area)
 F0 :                   COUNT:  EQU             0F0H
* Storage for Product (Answer)
 A0 :                   ANS:    EQU             0A0H

 00 :   64 81                   LD      ACC,    [DATA1+1]
 02 :   B4 91                   ADD     ACC,    [DATA2+1]
 04 :   A2 7F                   SUB     ACC,    7FH
 06 :   74 A1                   ST      ACC,    [ANS+1]
 08 :   62 70                   LD      ACC,    112
 0A :   74 F0                   ST      ACC,    [COUNT]
 0C :   6A 0E                   LD      IX,     14
 0E :   C0              LP1:    EOR     ACC,    ACC
 0F :   76 CF                   ST      ACC,    [IX+WORK-1]
 11 :   76 A1                   ST      ACC,    [IX+ANS+2-1]
 13 :   76 AF                   ST      ACC,    [IX+ANS+2+14-1]
 15 :   66 91                   LD      ACC,    [IX+DATA2+2-1]
 17 :   76 DD                   ST      ACC,    [IX+WORK+14-1]
 19 :   AA 01                   SUB     IX,     1
 1B :   31 0E                   BNZ             LP1
 1D :   64 8F           LP2:    LD      ACC,    [DATA1+2+13]
 1F :   42                      SRL     ACC
 20 :   6A F2                   LD      IX,     -14
 22 :   66 90           LP3:    LD      ACC,    [IX+DATA1+2+14]
 24 :   44                      RRA     ACC
 25 :   76 90                   ST      ACC,    [IX+DATA1+2+14]
 27 :   BA 01                   ADD     IX,     1
 29 :   31 22                   BNZ             LP3
 2B :   35 3A                   BNC             LP5
 2D :   6A 1C                   LD      IX,     28
 2F :   20                      RCF
 30 :   66 A1           LP4:    LD      ACC,    [IX+ANS+2-1]
 32 :   96 CF                   ADC     ACC,    [IX+WORK-1]
 34 :   76 A1                   ST      ACC,    [IX+ANS+2-1]
 36 :   AA 01                   SUB     IX,     1
 38 :   31 30                   BNZ             LP4
 3A :   6A 1C           LP5:    LD      IX,     28
 3C :   20                      RCF
 3D :   66 CF           LP6:    LD      ACC,    [IX+WORK-1]
 3F :   45                      RLA     ACC
 40 :   76 CF                   ST      ACC,    [IX+WORK-1]
 42 :   AA 01                   SUB     IX,     1
 44 :   31 3D                   BNZ             LP6
 46 :   64 F0                   LD      ACC,    [COUNT]
 48 :   A2 01                   SUB     ACC,    1
 4A :   74 F0                   ST      ACC,    [COUNT]
 4C :   31 1D                   BNZ             LP2
 4E :   64 A2                   LD      ACC,    [ANS+2]
 50 :   E2 80                   AND     ACC,    80H
 52 :   31 64                   BNZ             LP8
 54 :   6A 0E                   LD      IX,     14
 56 :   64 B0                   LD      ACC,    [ANS+2+14]
 58 :   43                      SLL     ACC
 59 :   66 A1           LP7:    LD      ACC,    [IX+ANS+2-1]
 5B :   45                      RLA     ACC
 5C :   76 A1                   ST      ACC,    [IX+ANS+2-1]
 5E :   AA 01                   SUB     IX,     1
 60 :   31 59                   BNZ             LP7
 62 :   30 6A                   BA              SP1
 64 :   64 A1           LP8:    LD      ACC,    [ANS+1]
 66 :   B2 01                   ADD     ACC,    1
 68 :   74 A1                   ST      ACC,    [ANS+1]
 6A :   64 80           SP1:    LD      ACC,    [DATA1]
 6C :   C4 90                   EOR     ACC,    [DATA2]
 6E :   74 A0                   ST      ACC,    [ANS]
 70 :   0F                      HLT
                                END
